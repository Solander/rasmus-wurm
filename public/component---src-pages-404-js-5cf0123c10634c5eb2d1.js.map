{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/images/Logo_Lila.svg","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","LogoContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Logo","Header","siteTitle","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","console","log","HeaderLogo","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","src","height","defaultProps","__webpack_require__","p","Layout","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","_header__WEBPACK_IMPORTED_MODULE_5__","site","siteMetadata","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_1__","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-5cf0123c10634c5eb2d1.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"@emotion/styled\"\nimport  HeaderLogo  from '../images/Logo_Lila.svg';\nimport {Link} from 'gatsby';\nconst LogoContainer = styled.div`\nbackground: white;\ntext-align: center;\npadding: 27px 0;\n`;\nconst Logo = styled.img `\nmax-height: 116px;\nmargin: 0;`\nconst Header = ({ siteTitle }) => (\n  \n  <header>\n    {console.log({HeaderLogo})}\n    <LogoContainer><Link to=\"/\"><Logo src={HeaderLogo} height= \"100%\"/></Link></LogoContainer>\n   \n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/Logo_Lila-6305652c91e27d5c0a26308bdc6b5939.svg\";","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}